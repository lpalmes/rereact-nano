// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List       = require("bs-platform/lib/js/list.js");
var Block      = require("bs-platform/lib/js/block.js");
var Rereact    = require("./rereact.bs.js");
var Reductive  = require("reductive/src/reductive.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function reducer(state, action) {
  if (action.tag) {
    return /* record */[
            /* frameworks */state[/* frameworks */0],
            /* edit */action[0]
          ];
  } else {
    return /* record */[
            /* frameworks : :: */[
              action[0],
              state[/* frameworks */0]
            ],
            /* edit */state[/* edit */1]
          ];
  }
}

var store = Reductive.Store[/* create */0](reducer, /* record */[
      /* frameworks : [] */0,
      /* edit : false */0
    ], /* None */0, /* () */0);

var component = Rereact.statelessComponent("Test");

function createElement($staropt$star, children, _) {
  var name = $staropt$star ? $staropt$star[0] : "Reason";
  return Rereact.element(/* record */[
              /* debugName */component[/* debugName */0],
              /* render */(function () {
                  return Rereact.ReactDom[/* h4 */5](/* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                              Rereact.stringToElement(name),
                              /* :: */[
                                Rereact.listToElement(children),
                                /* [] */0
                              ]
                            ], /* () */0);
                })
            ]);
}

var Test = /* module */[
  /* component */component,
  /* createElement */createElement
];

var component$1 = Rereact.statelessComponent("Test");

function createElement$1(count, children, _) {
  return Rereact.element(/* record */[
              /* debugName */component$1[/* debugName */0],
              /* render */(function () {
                  console.log(count);
                  var match = +(count === 1);
                  return Rereact.ReactDom[/* div */1](/* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                              Rereact.stringToElement(Pervasives.string_of_int(count)),
                              /* :: */[
                                match !== 0 ? Rereact.nullElement : createElement$1(count - 1 | 0, children, /* () */0),
                                /* [] */0
                              ]
                            ], /* () */0);
                })
            ]);
}

var RecursiveComponent = /* module */[
  /* component */component$1,
  /* createElement */createElement$1
];

var component$2 = Rereact.statelessComponent("Sample");

function createElement$2(_, frameworks, _$1, _$2) {
  return Rereact.element(/* record */[
              /* debugName */component$2[/* debugName */0],
              /* render */(function () {
                  return Rereact.ReactDom[/* div */1](/* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                              createElement(/* None */0, /* :: */[
                                    Rereact.ReactDom[/* button */12](/* None */0, /* None */0, /* Some */[(function () {
                                              return Reductive.Store[/* dispatch */4](store, /* AddFramework */Block.__(0, ["Rereact"]));
                                            })], /* None */0, /* :: */[
                                          Rereact.stringToElement("click me"),
                                          /* [] */0
                                        ], /* () */0),
                                    /* :: */[
                                      Rereact.listToElement(List.map((function (name) {
                                                  return createElement(/* Some */[name], /* [] */0, /* () */0);
                                                }), frameworks)),
                                      /* [] */0
                                    ]
                                  ], /* () */0),
                              /* :: */[
                                Rereact.ReactDom[/* input */13](/* None */0, /* Some */["Hello my friend"], /* None */0, /* Some */[(function (e) {
                                          console.log(e);
                                          return /* () */0;
                                        })], /* [] */0, /* () */0),
                                /* [] */0
                              ]
                            ], /* () */0);
                })
            ]);
}

var Sample = /* module */[
  /* component */component$2,
  /* createElement */createElement$2
];

function renderApp() {
  var state = Reductive.Store[/* getState */5](store);
  var match = document.getElementById("container");
  if (match !== null) {
    return Rereact.ReactDom[/* render */15](createElement$2("ReasonML BA", state[/* frameworks */0], /* [] */0, /* () */0), match);
  } else {
    console.log("No dom element found :(");
    return /* () */0;
  }
}

renderApp(/* () */0);

Reductive.Store[/* subscribe */2](store, renderApp);

exports.reducer            = reducer;
exports.store              = store;
exports.Test               = Test;
exports.RecursiveComponent = RecursiveComponent;
exports.Sample             = Sample;
exports.renderApp          = renderApp;
/* store Not a pure module */
