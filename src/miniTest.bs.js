// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Js_json         = require("bs-platform/lib/js/js_json.js");
var Repollo         = require("./repollo/repollo.bs.js");
var Rereact         = require("./rereact/rereact.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var RereactElements = require("./rereact/rereactElements.bs.js");

var Graphql_error = Caml_exceptions.create("MiniTest.VendorsQuery.Graphql_error");

var query = "query   {\nvendors  {\nid  \nname  \n}\n}";

function parse(value) {
  var match = Js_json.decodeObject(value);
  if (match) {
    var value$1 = match[0]["vendors"];
    var match$1 = Js_json.decodeArray(value$1);
    var tmp;
    if (match$1) {
      tmp = match$1[0].map((function (value) {
              var match = Js_json.decodeNull(value);
              if (match) {
                return /* None */0;
              } else {
                var match$1 = Js_json.decodeObject(value);
                var tmp;
                if (match$1) {
                  var value$1 = match$1[0];
                  var value$2 = value$1["id"];
                  var match$2 = Js_json.decodeString(value$2);
                  var tmp$1;
                  if (match$2) {
                    tmp$1 = match$2[0];
                  } else {
                    throw Graphql_error;
                  }
                  var value$3 = value$1["name"];
                  var match$3 = Js_json.decodeString(value$3);
                  var tmp$2;
                  if (match$3) {
                    tmp$2 = match$3[0];
                  } else {
                    throw Graphql_error;
                  }
                  tmp = {
                    id: tmp$1,
                    name: tmp$2
                  };
                } else {
                  throw Graphql_error;
                }
                return /* Some */[tmp];
              }
            }));
    } else {
      throw Graphql_error;
    }
    return {
            vendors: tmp
          };
  } else {
    throw Graphql_error;
  }
}

function make() {
  return {
          query: query,
          variables: null,
          parse: parse
        };
}

function makeWithVariables() {
  return {
          query: query,
          variables: null,
          parse: parse
        };
}

function ret_type() {
  return /* module */[];
}

var MT_Ret = /* module */[];

var VendorsQuery = /* module */[
  /* Graphql_error */Graphql_error,
  /* query */query,
  /* parse */parse,
  /* make */make,
  /* makeWithVariables */makeWithVariables,
  /* ret_type */ret_type,
  /* MT_Ret */MT_Ret
];

var vendorQuery = make(/* () */0);

function createElement(_, _$1) {
  return Rereact.element(/* record */[
              /* debugName */"MiniTest",
              /* render */(function () {
                  return Repollo.createElement(vendorQuery, (function (props) {
                                console.log(props);
                                return RereactElements.div(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* :: */[
                                            Rereact.stringToElement("Hello"),
                                            /* [] */0
                                          ], /* () */0);
                              }), /* [] */0, /* () */0);
                }),
              /* initialState */(function () {
                  return /* () */0;
                }),
              /* didMount */(function () {
                  return /* () */0;
                }),
              /* reducer */(function (_, _$1) {
                  return /* NoUpdate */0;
                })
            ]);
}

exports.VendorsQuery  = VendorsQuery;
exports.vendorQuery   = vendorQuery;
exports.createElement = createElement;
/* vendorQuery Not a pure module */
