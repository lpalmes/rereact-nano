// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List    = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block   = require("bs-platform/lib/js/block.js");
var Curry   = require("bs-platform/lib/js/curry.js");

var defaultProps = /* record */[
  /* id : None */0,
  /* value : None */0,
  /* onClick : None */0,
  /* onChange : None */0
];

function statelessComponent(debugName) {
  return /* record */[
          /* debugName */debugName,
          /* render */(function () {
              return /* Flat */Block.__(0, [/* [] */0]);
            })
        ];
}

function stringToElement(value) {
  return /* Flat */Block.__(0, [/* :: */[
              /* String */Block.__(0, [value]),
              /* [] */0
            ]]);
}

function element(component) {
  return /* Flat */Block.__(0, [/* :: */[
              /* Component */Block.__(1, [component]),
              /* [] */0
            ]]);
}

function listToElement(elements) {
  return /* Nested */Block.__(1, [
            /* None */0,
            defaultProps,
            elements
          ]);
}

function arrayToElement(elements) {
  return /* Nested */Block.__(1, [
            /* None */0,
            defaultProps,
            $$Array.to_list(elements)
          ]);
}

function createDomElement(name, id, value, onClick, onChange, children, _) {
  return /* Nested */Block.__(1, [
            /* Some */[name],
            /* record */[
              /* id */id,
              /* value */value,
              /* onClick */onClick,
              /* onChange */onChange
            ],
            children
          ]);
}

function div(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("div", param, param$1, param$2, param$3, param$4, param$5);
}

function h1(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("h1", param, param$1, param$2, param$3, param$4, param$5);
}

function h2(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("h2", param, param$1, param$2, param$3, param$4, param$5);
}

function h3(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("h3", param, param$1, param$2, param$3, param$4, param$5);
}

function h4(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("h4", param, param$1, param$2, param$3, param$4, param$5);
}

function h5(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("h5", param, param$1, param$2, param$3, param$4, param$5);
}

function h6(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("h6", param, param$1, param$2, param$3, param$4, param$5);
}

function span(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("span", param, param$1, param$2, param$3, param$4, param$5);
}

function ul(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("ul", param, param$1, param$2, param$3, param$4, param$5);
}

function li(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("li", param, param$1, param$2, param$3, param$4, param$5);
}

function img(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("img", param, param$1, param$2, param$3, param$4, param$5);
}

function button(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("button", param, param$1, param$2, param$3, param$4, param$5);
}

function input(param, param$1, param$2, param$3, param$4, param$5) {
  return createDomElement("input", param, param$1, param$2, param$3, param$4, param$5);
}

function addProps(domElement, props) {
  var match = props[/* id */0];
  if (match) {
    domElement.setAttribute("id", match[0]);
  }
  var match$1 = props[/* value */1];
  if (match$1) {
    domElement.setAttribute("value", match$1[0]);
  }
  var match$2 = props[/* onClick */2];
  if (match$2) {
    domElement.addEventListener("click", match$2[0]);
  }
  var match$3 = props[/* onChange */3];
  if (match$3) {
    domElement.addEventListener("change", match$3[0]);
    return /* () */0;
  } else {
    return /* () */0;
  }
}

function render(element, parentElement) {
  if (element.tag) {
    var elements = element[2];
    var name = element[0];
    if (name) {
      var node = document.createElement(name[0]);
      parentElement.appendChild(node);
      addProps(node, element[1]);
      return List.iter((function (e) {
                    return render(e, node);
                  }), elements);
    } else {
      return List.iter((function (e) {
                    return render(e, parentElement);
                  }), elements);
    }
  } else {
    return List.iter((function (elm) {
                  if (elm.tag) {
                    return render(Curry._1(elm[0][/* render */1], /* () */0), parentElement);
                  } else {
                    parentElement.innerText = elm[0];
                    return /* () */0;
                  }
                }), element[0]);
  }
}

var ReactDom = /* module */[
  /* createDomElement */createDomElement,
  /* div */div,
  /* h1 */h1,
  /* h2 */h2,
  /* h3 */h3,
  /* h4 */h4,
  /* h5 */h5,
  /* h6 */h6,
  /* span */span,
  /* ul */ul,
  /* li */li,
  /* img */img,
  /* button */button,
  /* input */input,
  /* addProps */addProps,
  /* render */render
];

var nullElement = /* Flat */Block.__(0, [/* [] */0]);

exports.defaultProps       = defaultProps;
exports.statelessComponent = statelessComponent;
exports.stringToElement    = stringToElement;
exports.nullElement        = nullElement;
exports.element            = element;
exports.listToElement      = listToElement;
exports.arrayToElement     = arrayToElement;
exports.ReactDom           = ReactDom;
/* No side effect */
