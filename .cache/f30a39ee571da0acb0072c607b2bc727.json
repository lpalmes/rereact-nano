{"dependencies":[{"name":"bs-platform/lib/js/list.js","loc":{"line":4,"column":26}},{"name":"bs-platform/lib/js/block.js","loc":{"line":5,"column":26}},{"name":"bs-platform/lib/js/curry.js","loc":{"line":6,"column":26}},{"name":"reason-react/src/ReasonReact.js","loc":{"line":7,"column":26}}],"generated":{"js":"// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List        = require(\"bs-platform/lib/js/list.js\");\nvar Block       = require(\"bs-platform/lib/js/block.js\");\nvar Curry       = require(\"bs-platform/lib/js/curry.js\");\nvar ReasonReact = require(\"reason-react/src/ReasonReact.js\");\n\nfunction create(reducer, preloadedState, enhancer, _) {\n  if (enhancer) {\n    return /* record */[\n            /* state */preloadedState,\n            /* reducer */reducer,\n            /* listeners : [] */0,\n            /* customDispatcher : Some */[enhancer[0]]\n          ];\n  } else {\n    return /* record */[\n            /* state */preloadedState,\n            /* reducer */reducer,\n            /* listeners : [] */0,\n            /* customDispatcher : None */0\n          ];\n  }\n}\n\nfunction unsubscribe(store, listener, _) {\n  store[/* listeners */2] = List.filter((function (l) {\n            return +(listener !== l);\n          }))(store[/* listeners */2]);\n  return /* () */0;\n}\n\nfunction subscribe(store, listener) {\n  store[/* listeners */2] = /* :: */[\n    listener,\n    store[/* listeners */2]\n  ];\n  return (function (param) {\n      return unsubscribe(store, listener, param);\n    });\n}\n\nfunction nativeDispatch(store, action) {\n  store[/* state */0] = Curry._2(store[/* reducer */1], store[/* state */0], action);\n  return List.iter((function (listener) {\n                return Curry._1(listener, /* () */0);\n              }), store[/* listeners */2]);\n}\n\nfunction dispatch(store, action) {\n  var match = store[/* customDispatcher */3];\n  if (match) {\n    return Curry._3(match[0], store, (function (param) {\n                  return nativeDispatch(store, param);\n                }), action);\n  } else {\n    return nativeDispatch(store, action);\n  }\n}\n\nfunction getState(store) {\n  return store[/* state */0];\n}\n\nfunction replaceReducer(store, reducer) {\n  store[/* reducer */1] = reducer;\n  return /* () */0;\n}\n\nvar Store = /* module */[\n  /* create */create,\n  /* unsubscribe */unsubscribe,\n  /* subscribe */subscribe,\n  /* nativeDispatch */nativeDispatch,\n  /* dispatch */dispatch,\n  /* getState */getState,\n  /* replaceReducer */replaceReducer\n];\n\nfunction createMake($staropt$star, store) {\n  var name = $staropt$star ? $staropt$star[0] : \"Provider\";\n  var innerComponent = ReasonReact.reducerComponent(name);\n  return (function (component, _) {\n      var newrecord = innerComponent.slice();\n      newrecord[/* didMount */4] = (function (param) {\n          return /* Update */Block.__(0, [/* record */[\n                      /* reductiveState : Some */[store[/* state */0]],\n                      /* unsubscribe : Some */[subscribe(store, Curry._1(param[/* reduce */1], (function () {\n                                    return /* UpdateState */0;\n                                  })))]\n                    ]]);\n        });\n      newrecord[/* willUnmount */6] = (function (param) {\n          var match = param[/* state */2][/* unsubscribe */1];\n          if (match) {\n            return Curry._1(match[0], /* () */0);\n          } else {\n            return /* () */0;\n          }\n        });\n      newrecord[/* render */9] = (function (param) {\n          var match = param[/* state */2][/* reductiveState */0];\n          if (match) {\n            return ReasonReact.element(/* None */0, /* None */0, Curry._3(component, match[0], (function (param) {\n                              return dispatch(store, param);\n                            }), /* array */[]));\n          } else {\n            return null;\n          }\n        });\n      newrecord[/* initialState */10] = (function () {\n          return /* record */[\n                  /* reductiveState : None */0,\n                  /* unsubscribe : None */0\n                ];\n        });\n      newrecord[/* reducer */12] = (function (_, state) {\n          return /* Update */Block.__(0, [/* record */[\n                      /* reductiveState : Some */[store[/* state */0]],\n                      /* unsubscribe */state[/* unsubscribe */1]\n                    ]]);\n        });\n      return newrecord;\n    });\n}\n\nvar Provider = /* module */[/* createMake */createMake];\n\nfunction compose() {\n  return /* () */0;\n}\n\nfunction combineReducers() {\n  return /* () */0;\n}\n\nfunction applyMiddleware() {\n  return /* () */0;\n}\n\nfunction bindActionCreators(actions, dispatch) {\n  return List.map((function (action, _) {\n                return Curry._1(dispatch, action);\n              }), actions);\n}\n\nexports.Store              = Store;\nexports.Provider           = Provider;\nexports.compose            = compose;\nexports.combineReducers    = combineReducers;\nexports.applyMiddleware    = applyMiddleware;\nexports.bindActionCreators = bindActionCreators;\n/* ReasonReact Not a pure module */\n"},"hash":"7d3e4ffbd98906f8c71b4f07d0c79658"}